steps:
  - name: 'semgrep/semgrep'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        semgrep ci \
        --config auto \
        --config p/python \
        --config p/flask \
        --json --json-output semgrep-results.json
        
        SEMGREP_EXIT_CODE=$? 
        
        set -eo pipefail
        
        if [ $SEMGREP_EXIT_CODE -ne 0 ]; then
          echo "Semgrep found vulnerabilities! Check the results for more infos."
          exit 1
        else
          echo "Semgrep scan completed successfully with no findings."
        fi
    id: 'Semgrep Scan'

  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'semgrep-results.json', 'gs://cicd-practice-semgrep/semgrep-findings/$BUILD_ID/{$COMMIT_SHA}-semgrep-results.json']
    id: 'Upload Result'
    waitFor: ['Semgrep Scan']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '.'
    id: 'Build Docker Image'
    waitFor: ['Upload Result']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA'
    id: 'Push to Artifact Registry'
    waitFor: ['Build Docker Image']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_ARTIFACT_REGISTRY_REPO/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
    waitFor: ["Push to Artifact Registry"]

images:
  - '${_ARTIFACT_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA'

substitutions:
  _SERVICE_NAME: vul-webapp
  _ARTIFACT_REGISTRY_LOCATION: asia-east1
  _ARTIFACT_REGISTRY_REPO: cicd-practice

  _CLOUD_RUN_REGION: asia-east1

  _AR_REPOSITORY: cloud-run-source-deploy
  _AR_PROJECT_ID: cicd-demo-460715
  _AR_HOSTNAME: asia-east1-docker.pkg.dev

  _TRIGGER_ID: de6e9b90-1d3e-468f-9832-e5c5a9f0575c
  _PLATFORM: managed
  _DEPLOY_REGION: asia-east1

options:
  logging: CLOUD_LOGGING_ONLY
